#!/bin/sh --
# sx - start an xserver

# requires xauth Xorg

# I'm willing to take advantage of errexit for this script as roughly 85% of
# the error checking would just be exiting on command failure.
set -o errexit

cleanup() {
    if kill -0 "$1" 2> /dev/null; then
        kill -s TERM "$1"
        wait "$1"
    fi

    if ! stty "$stty"; then
        stty sane
    fi

    xauth remove :"$tty"

    exit
}

stty=$(stty -g)
tty=$(ps -o tty= $$)

case $tty in
    tty*) tty=${tty#tty}
esac

cfgdir=${XDG_CONFIG_HOME:-$HOME/.config}/sx
export XAUTHORITY=${XAUTHORITY:-$cfgdir/xauthority}

mkdir -p "$cfgdir" "${XAUTHORITY%/*}"
touch "$XAUTHORITY"

trap 'cleanup "$pid"' EXIT

xauth add :"$tty" MIT-MAGIC-COOKIE-1 "$(od -An -N16 -tx /dev/urandom | tr -d ' ')"

# Xorg will check if its SIGUSR1 disposition is SIG_IGN and use this state to
# reply back to the parent process with SIGUSR1 as an indication it is ready
# to accept connections.
# Taking advantage of this feature allows us to launch our client directly
# from the SIGUSR1 handler and avoid the need to poll for server readiness.
trap 'DISPLAY=:$tty "${@:-$cfgdir/sxrc}"' USR1
(
    trap '' USR1
    exec /usr/lib/xorg-server/Xorg :"$tty" -keeptty vt"$tty" -noreset -auth "$XAUTHORITY"
) & pid=$!
wait
